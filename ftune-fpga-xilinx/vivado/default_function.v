// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="default_function,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku035-fbva676-1-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.420000,HLS_SYN_LAT=67,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=167,HLS_SYN_LUT=913,HLS_VERSION=2019_1}" *)

module default_function (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_0_0_V,
        A_0_1_V,
        A_0_2_V,
        A_0_3_V,
        A_0_4_V,
        A_0_5_V,
        A_0_6_V,
        A_0_7_V,
        A_0_8_V,
        A_0_9_V,
        A_1_0_V,
        A_1_1_V,
        A_1_2_V,
        A_1_3_V,
        A_1_4_V,
        A_1_5_V,
        A_1_6_V,
        A_1_7_V,
        A_1_8_V,
        A_1_9_V,
        A_2_0_V,
        A_2_1_V,
        A_2_2_V,
        A_2_3_V,
        A_2_4_V,
        A_2_5_V,
        A_2_6_V,
        A_2_7_V,
        A_2_8_V,
        A_2_9_V,
        A_3_0_V,
        A_3_1_V,
        A_3_2_V,
        A_3_3_V,
        A_3_4_V,
        A_3_5_V,
        A_3_6_V,
        A_3_7_V,
        A_3_8_V,
        A_3_9_V,
        A_4_0_V,
        A_4_1_V,
        A_4_2_V,
        A_4_3_V,
        A_4_4_V,
        A_4_5_V,
        A_4_6_V,
        A_4_7_V,
        A_4_8_V,
        A_4_9_V,
        A_5_0_V,
        A_5_1_V,
        A_5_2_V,
        A_5_3_V,
        A_5_4_V,
        A_5_5_V,
        A_5_6_V,
        A_5_7_V,
        A_5_8_V,
        A_5_9_V,
        A_6_0_V,
        A_6_1_V,
        A_6_2_V,
        A_6_3_V,
        A_6_4_V,
        A_6_5_V,
        A_6_6_V,
        A_6_7_V,
        A_6_8_V,
        A_6_9_V,
        A_7_0_V,
        A_7_1_V,
        A_7_2_V,
        A_7_3_V,
        A_7_4_V,
        A_7_5_V,
        A_7_6_V,
        A_7_7_V,
        A_7_8_V,
        A_7_9_V,
        A_8_0_V,
        A_8_1_V,
        A_8_2_V,
        A_8_3_V,
        A_8_4_V,
        A_8_5_V,
        A_8_6_V,
        A_8_7_V,
        A_8_8_V,
        A_8_9_V,
        A_9_0_V,
        A_9_1_V,
        A_9_2_V,
        A_9_3_V,
        A_9_4_V,
        A_9_5_V,
        A_9_6_V,
        A_9_7_V,
        A_9_8_V,
        A_9_9_V,
        B_V_address0,
        B_V_ce0,
        B_V_we0,
        B_V_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] A_0_0_V;
input  [31:0] A_0_1_V;
input  [31:0] A_0_2_V;
input  [31:0] A_0_3_V;
input  [31:0] A_0_4_V;
input  [31:0] A_0_5_V;
input  [31:0] A_0_6_V;
input  [31:0] A_0_7_V;
input  [31:0] A_0_8_V;
input  [31:0] A_0_9_V;
input  [31:0] A_1_0_V;
input  [31:0] A_1_1_V;
input  [31:0] A_1_2_V;
input  [31:0] A_1_3_V;
input  [31:0] A_1_4_V;
input  [31:0] A_1_5_V;
input  [31:0] A_1_6_V;
input  [31:0] A_1_7_V;
input  [31:0] A_1_8_V;
input  [31:0] A_1_9_V;
input  [31:0] A_2_0_V;
input  [31:0] A_2_1_V;
input  [31:0] A_2_2_V;
input  [31:0] A_2_3_V;
input  [31:0] A_2_4_V;
input  [31:0] A_2_5_V;
input  [31:0] A_2_6_V;
input  [31:0] A_2_7_V;
input  [31:0] A_2_8_V;
input  [31:0] A_2_9_V;
input  [31:0] A_3_0_V;
input  [31:0] A_3_1_V;
input  [31:0] A_3_2_V;
input  [31:0] A_3_3_V;
input  [31:0] A_3_4_V;
input  [31:0] A_3_5_V;
input  [31:0] A_3_6_V;
input  [31:0] A_3_7_V;
input  [31:0] A_3_8_V;
input  [31:0] A_3_9_V;
input  [31:0] A_4_0_V;
input  [31:0] A_4_1_V;
input  [31:0] A_4_2_V;
input  [31:0] A_4_3_V;
input  [31:0] A_4_4_V;
input  [31:0] A_4_5_V;
input  [31:0] A_4_6_V;
input  [31:0] A_4_7_V;
input  [31:0] A_4_8_V;
input  [31:0] A_4_9_V;
input  [31:0] A_5_0_V;
input  [31:0] A_5_1_V;
input  [31:0] A_5_2_V;
input  [31:0] A_5_3_V;
input  [31:0] A_5_4_V;
input  [31:0] A_5_5_V;
input  [31:0] A_5_6_V;
input  [31:0] A_5_7_V;
input  [31:0] A_5_8_V;
input  [31:0] A_5_9_V;
input  [31:0] A_6_0_V;
input  [31:0] A_6_1_V;
input  [31:0] A_6_2_V;
input  [31:0] A_6_3_V;
input  [31:0] A_6_4_V;
input  [31:0] A_6_5_V;
input  [31:0] A_6_6_V;
input  [31:0] A_6_7_V;
input  [31:0] A_6_8_V;
input  [31:0] A_6_9_V;
input  [31:0] A_7_0_V;
input  [31:0] A_7_1_V;
input  [31:0] A_7_2_V;
input  [31:0] A_7_3_V;
input  [31:0] A_7_4_V;
input  [31:0] A_7_5_V;
input  [31:0] A_7_6_V;
input  [31:0] A_7_7_V;
input  [31:0] A_7_8_V;
input  [31:0] A_7_9_V;
input  [31:0] A_8_0_V;
input  [31:0] A_8_1_V;
input  [31:0] A_8_2_V;
input  [31:0] A_8_3_V;
input  [31:0] A_8_4_V;
input  [31:0] A_8_5_V;
input  [31:0] A_8_6_V;
input  [31:0] A_8_7_V;
input  [31:0] A_8_8_V;
input  [31:0] A_8_9_V;
input  [31:0] A_9_0_V;
input  [31:0] A_9_1_V;
input  [31:0] A_9_2_V;
input  [31:0] A_9_3_V;
input  [31:0] A_9_4_V;
input  [31:0] A_9_5_V;
input  [31:0] A_9_6_V;
input  [31:0] A_9_7_V;
input  [31:0] A_9_8_V;
input  [31:0] A_9_9_V;
output  [5:0] B_V_address0;
output   B_V_ce0;
output   B_V_we0;
output  [3:0] B_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg B_V_ce0;
reg B_V_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten_reg_823;
reg   [3:0] p_089_0_reg_834;
reg   [3:0] p_082_0_reg_845;
wire   [0:0] icmp_ln887_fu_1122_p2;
reg   [0:0] icmp_ln887_reg_1424;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln887_reg_1424_pp0_iter1_reg;
wire   [6:0] add_ln887_fu_1128_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] select_ln544_fu_1146_p3;
reg   [3:0] select_ln544_reg_1433;
reg   [3:0] select_ln544_reg_1433_pp0_iter1_reg;
wire   [3:0] select_ln544_1_fu_1154_p3;
reg   [3:0] select_ln544_1_reg_1438;
reg   [3:0] select_ln544_1_reg_1438_pp0_iter1_reg;
wire   [3:0] x_V_fu_1162_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [3:0] ap_phi_mux_p_089_0_phi_fu_838_p4;
wire    ap_block_pp0_stage0;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln68_reg_856;
reg   [31:0] ap_phi_reg_pp0_iter1_phi_ln68_reg_856;
reg   [31:0] ap_phi_reg_pp0_iter2_phi_ln68_reg_856;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln68_1_reg_989;
reg   [31:0] ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989;
reg   [31:0] ap_phi_reg_pp0_iter2_phi_ln68_1_reg_989;
wire   [63:0] zext_ln321_1_fu_1188_p1;
wire   [0:0] icmp_ln887_1_fu_1140_p2;
wire   [3:0] y_V_fu_1134_p2;
wire   [6:0] tmp_1_fu_1168_p3;
wire   [7:0] zext_ln321_fu_1179_p1;
wire   [7:0] zext_ln8_fu_1175_p1;
wire   [7:0] add_ln321_fu_1182_p2;
wire   [3:0] trunc_ln214_fu_1193_p1;
wire   [3:0] trunc_ln214_1_fu_1197_p1;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_398;
reg    ap_condition_358;
reg    ap_condition_510;
reg    ap_condition_496;
reg    ap_condition_482;
reg    ap_condition_468;
reg    ap_condition_454;
reg    ap_condition_552;
reg    ap_condition_384;
reg    ap_condition_380;
reg    ap_condition_376;
reg    ap_condition_372;
reg    ap_condition_368;
reg    ap_condition_364;
reg    ap_condition_337;
reg    ap_condition_333;
reg    ap_condition_328;
reg    ap_condition_323;
reg    ap_condition_318;
reg    ap_condition_313;
reg    ap_condition_302;
reg    ap_condition_702;
reg    ap_condition_613;
reg    ap_condition_615;
reg    ap_condition_617;
reg    ap_condition_500;
reg    ap_condition_291;
reg    ap_condition_704;
reg    ap_condition_622;
reg    ap_condition_624;
reg    ap_condition_626;
reg    ap_condition_486;
reg    ap_condition_280;
reg    ap_condition_706;
reg    ap_condition_631;
reg    ap_condition_633;
reg    ap_condition_635;
reg    ap_condition_472;
reg    ap_condition_269;
reg    ap_condition_708;
reg    ap_condition_640;
reg    ap_condition_642;
reg    ap_condition_644;
reg    ap_condition_458;
reg    ap_condition_262;
reg    ap_condition_256;
reg    ap_condition_440;
reg    ap_condition_436;
reg    ap_condition_432;
reg    ap_condition_428;
reg    ap_condition_424;
reg    ap_condition_420;
reg    ap_condition_416;
reg    ap_condition_538;
reg    ap_condition_534;
reg    ap_condition_530;
reg    ap_condition_526;
reg    ap_condition_522;
reg    ap_condition_236;
reg    ap_condition_388;
reg    ap_condition_341;
reg    ap_condition_306;
reg    ap_condition_295;
reg    ap_condition_284;
reg    ap_condition_273;
reg    ap_condition_714;
reg    ap_condition_717;
reg    ap_condition_719;
reg    ap_condition_721;
reg    ap_condition_723;
reg    ap_condition_725;
reg    ap_condition_574;
reg    ap_condition_662;
reg    ap_condition_666;
reg    ap_condition_670;
reg    ap_condition_674;
reg    ap_condition_678;
reg    ap_condition_696;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_236)) begin
        if ((1'b1 == ap_condition_522)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_9_8_V;
        end else if ((1'b1 == ap_condition_526)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_9_7_V;
        end else if ((1'b1 == ap_condition_530)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_9_6_V;
        end else if ((1'b1 == ap_condition_534)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_9_5_V;
        end else if ((1'b1 == ap_condition_538)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_9_4_V;
        end else if ((1'b1 == ap_condition_416)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_9_3_V;
        end else if ((1'b1 == ap_condition_420)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_9_2_V;
        end else if ((1'b1 == ap_condition_424)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_8_8_V;
        end else if ((1'b1 == ap_condition_428)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_8_7_V;
        end else if ((1'b1 == ap_condition_432)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_8_6_V;
        end else if ((1'b1 == ap_condition_436)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_8_5_V;
        end else if ((1'b1 == ap_condition_440)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_8_4_V;
        end else if ((1'b1 == ap_condition_256)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_8_3_V;
        end else if ((1'b1 == ap_condition_262)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_8_2_V;
        end else if ((1'b1 == ap_condition_458)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_7_8_V;
        end else if ((1'b1 == ap_condition_644)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_7_7_V;
        end else if ((1'b1 == ap_condition_642)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_7_6_V;
        end else if ((1'b1 == ap_condition_640)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_7_5_V;
        end else if ((1'b1 == ap_condition_708)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_7_4_V;
        end else if ((1'b1 == ap_condition_269)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_7_3_V;
        end else if ((1'b1 == ap_condition_472)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_6_8_V;
        end else if ((1'b1 == ap_condition_635)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_6_7_V;
        end else if ((1'b1 == ap_condition_633)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_6_6_V;
        end else if ((1'b1 == ap_condition_631)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_6_5_V;
        end else if ((1'b1 == ap_condition_706)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_6_4_V;
        end else if ((1'b1 == ap_condition_280)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_6_3_V;
        end else if ((1'b1 == ap_condition_486)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_5_8_V;
        end else if ((1'b1 == ap_condition_626)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_5_7_V;
        end else if ((1'b1 == ap_condition_624)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_5_6_V;
        end else if ((1'b1 == ap_condition_622)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_5_5_V;
        end else if ((1'b1 == ap_condition_704)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_5_4_V;
        end else if ((1'b1 == ap_condition_291)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_5_3_V;
        end else if ((1'b1 == ap_condition_500)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_4_8_V;
        end else if ((1'b1 == ap_condition_617)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_4_7_V;
        end else if ((1'b1 == ap_condition_615)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_4_6_V;
        end else if ((1'b1 == ap_condition_613)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_4_5_V;
        end else if ((1'b1 == ap_condition_702)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_4_4_V;
        end else if ((1'b1 == ap_condition_302)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_4_3_V;
        end else if ((1'b1 == ap_condition_313)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_3_8_V;
        end else if ((1'b1 == ap_condition_318)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_3_7_V;
        end else if ((1'b1 == ap_condition_323)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_3_6_V;
        end else if ((1'b1 == ap_condition_328)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_3_5_V;
        end else if ((1'b1 == ap_condition_333)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_3_4_V;
        end else if ((1'b1 == ap_condition_337)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_3_3_V;
        end else if ((1'b1 == ap_condition_364)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_2_8_V;
        end else if ((1'b1 == ap_condition_368)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_2_7_V;
        end else if ((1'b1 == ap_condition_372)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_2_6_V;
        end else if ((1'b1 == ap_condition_376)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_2_5_V;
        end else if ((1'b1 == ap_condition_380)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_2_4_V;
        end else if ((1'b1 == ap_condition_384)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_2_3_V;
        end else if ((1'b1 == ap_condition_552)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_9_9_V;
        end else if ((1'b1 == ap_condition_454)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_8_9_V;
        end else if ((1'b1 == ap_condition_468)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_7_9_V;
        end else if ((1'b1 == ap_condition_482)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_6_9_V;
        end else if ((1'b1 == ap_condition_496)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_5_9_V;
        end else if ((1'b1 == ap_condition_510)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_4_9_V;
        end else if ((1'b1 == ap_condition_358)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_3_9_V;
        end else if ((1'b1 == ap_condition_398)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= A_2_9_V;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989 <= ap_phi_reg_pp0_iter0_phi_ln68_1_reg_989;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_236)) begin
        if ((1'b1 == ap_condition_522)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_7_6_V;
        end else if ((1'b1 == ap_condition_526)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_7_5_V;
        end else if ((1'b1 == ap_condition_530)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_7_4_V;
        end else if ((1'b1 == ap_condition_534)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_7_3_V;
        end else if ((1'b1 == ap_condition_416)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_7_1_V;
        end else if ((1'b1 == ap_condition_420)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_7_0_V;
        end else if ((1'b1 == ap_condition_424)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_6_6_V;
        end else if ((1'b1 == ap_condition_428)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_6_5_V;
        end else if ((1'b1 == ap_condition_432)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_6_4_V;
        end else if ((1'b1 == ap_condition_436)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_6_3_V;
        end else if ((1'b1 == ap_condition_256)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_6_1_V;
        end else if ((1'b1 == ap_condition_262)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_6_0_V;
        end else if ((1'b1 == ap_condition_458)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_5_6_V;
        end else if ((1'b1 == ap_condition_644)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_5_5_V;
        end else if ((1'b1 == ap_condition_642)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_5_4_V;
        end else if ((1'b1 == ap_condition_640)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_5_3_V;
        end else if ((1'b1 == ap_condition_269)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_5_1_V;
        end else if ((1'b1 == ap_condition_273)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_5_0_V;
        end else if ((1'b1 == ap_condition_472)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_4_6_V;
        end else if ((1'b1 == ap_condition_635)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_4_5_V;
        end else if ((1'b1 == ap_condition_633)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_4_4_V;
        end else if ((1'b1 == ap_condition_631)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_4_3_V;
        end else if ((1'b1 == ap_condition_280)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_4_1_V;
        end else if ((1'b1 == ap_condition_284)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_4_0_V;
        end else if ((1'b1 == ap_condition_486)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_3_6_V;
        end else if ((1'b1 == ap_condition_626)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_3_5_V;
        end else if ((1'b1 == ap_condition_624)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_3_4_V;
        end else if ((1'b1 == ap_condition_622)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_3_3_V;
        end else if ((1'b1 == ap_condition_291)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_3_1_V;
        end else if ((1'b1 == ap_condition_295)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_3_0_V;
        end else if ((1'b1 == ap_condition_500)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_2_6_V;
        end else if ((1'b1 == ap_condition_617)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_2_5_V;
        end else if ((1'b1 == ap_condition_615)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_2_4_V;
        end else if ((1'b1 == ap_condition_613)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_2_3_V;
        end else if ((1'b1 == ap_condition_302)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_2_1_V;
        end else if ((1'b1 == ap_condition_306)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_2_0_V;
        end else if ((1'b1 == ap_condition_313)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_1_6_V;
        end else if ((1'b1 == ap_condition_318)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_1_5_V;
        end else if ((1'b1 == ap_condition_323)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_1_4_V;
        end else if ((1'b1 == ap_condition_328)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_1_3_V;
        end else if ((1'b1 == ap_condition_333)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_1_2_V;
        end else if ((1'b1 == ap_condition_337)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_1_1_V;
        end else if ((1'b1 == ap_condition_341)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_1_0_V;
        end else if ((1'b1 == ap_condition_364)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_0_6_V;
        end else if ((1'b1 == ap_condition_368)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_0_5_V;
        end else if ((1'b1 == ap_condition_372)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_0_4_V;
        end else if ((1'b1 == ap_condition_376)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_0_3_V;
        end else if ((1'b1 == ap_condition_380)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_0_2_V;
        end else if ((1'b1 == ap_condition_384)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_0_1_V;
        end else if ((1'b1 == ap_condition_388)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_0_0_V;
        end else if ((1'b1 == ap_condition_552)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_7_7_V;
        end else if ((1'b1 == ap_condition_454)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_6_7_V;
        end else if ((1'b1 == ap_condition_468)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_5_7_V;
        end else if ((1'b1 == ap_condition_482)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_4_7_V;
        end else if ((1'b1 == ap_condition_496)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_3_7_V;
        end else if ((1'b1 == ap_condition_510)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_2_7_V;
        end else if ((1'b1 == ap_condition_358)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_1_7_V;
        end else if ((1'b1 == ap_condition_398)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= A_0_7_V;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_phi_ln68_reg_856 <= ap_phi_reg_pp0_iter0_phi_ln68_reg_856;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_574)) begin
        if ((1'b1 == ap_condition_725)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_1_reg_989 <= A_7_2_V;
        end else if ((1'b1 == ap_condition_723)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_1_reg_989 <= A_6_2_V;
        end else if ((1'b1 == ap_condition_721)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_1_reg_989 <= A_5_2_V;
        end else if ((1'b1 == ap_condition_719)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_1_reg_989 <= A_4_2_V;
        end else if ((1'b1 == ap_condition_717)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_1_reg_989 <= A_3_2_V;
        end else if ((1'b1 == ap_condition_714)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_1_reg_989 <= A_2_2_V;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_1_reg_989 <= ap_phi_reg_pp0_iter1_phi_ln68_1_reg_989;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_574)) begin
        if ((1'b1 == ap_condition_696)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_reg_856 <= A_7_2_V;
        end else if ((1'b1 == ap_condition_678)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_reg_856 <= A_6_2_V;
        end else if ((1'b1 == ap_condition_674)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_reg_856 <= A_5_2_V;
        end else if ((1'b1 == ap_condition_670)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_reg_856 <= A_4_2_V;
        end else if ((1'b1 == ap_condition_666)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_reg_856 <= A_3_2_V;
        end else if ((1'b1 == ap_condition_662)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_reg_856 <= A_2_2_V;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_phi_ln68_reg_856 <= ap_phi_reg_pp0_iter1_phi_ln68_reg_856;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln887_fu_1122_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_823 <= add_ln887_fu_1128_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_823 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln887_fu_1122_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_082_0_reg_845 <= x_V_fu_1162_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_082_0_reg_845 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln887_reg_1424 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_089_0_reg_834 <= select_ln544_1_reg_1438;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_089_0_reg_834 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln887_reg_1424 <= icmp_ln887_fu_1122_p2;
        icmp_ln887_reg_1424_pp0_iter1_reg <= icmp_ln887_reg_1424;
        select_ln544_1_reg_1438_pp0_iter1_reg <= select_ln544_1_reg_1438;
        select_ln544_reg_1433_pp0_iter1_reg <= select_ln544_reg_1433;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln887_fu_1122_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln544_1_reg_1438 <= select_ln544_1_fu_1154_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln887_fu_1122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln544_reg_1433 <= select_ln544_fu_1146_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        B_V_ce0 = 1'b1;
    end else begin
        B_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1424_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        B_V_we0 = 1'b1;
    end else begin
        B_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln887_fu_1122_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln887_reg_1424 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_p_089_0_phi_fu_838_p4 = select_ln544_1_reg_1438;
    end else begin
        ap_phi_mux_p_089_0_phi_fu_838_p4 = p_089_0_reg_834;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln887_fu_1122_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln887_fu_1122_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_V_address0 = zext_ln321_1_fu_1188_p1;

assign B_V_d0 = (trunc_ln214_fu_1193_p1 + trunc_ln214_1_fu_1197_p1);

assign add_ln321_fu_1182_p2 = (zext_ln321_fu_1179_p1 + zext_ln8_fu_1175_p1);

assign add_ln887_fu_1128_p2 = (indvar_flatten_reg_823 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_236 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_256 = ((select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd1) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_262 = ((select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd0) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_269 = ((select_ln544_1_fu_1154_p3 == 4'd5) & (select_ln544_fu_1146_p3 == 4'd1) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_273 = ((select_ln544_1_fu_1154_p3 == 4'd5) & (select_ln544_fu_1146_p3 == 4'd0) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_280 = ((select_ln544_1_fu_1154_p3 == 4'd4) & (select_ln544_fu_1146_p3 == 4'd1) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_284 = ((select_ln544_1_fu_1154_p3 == 4'd4) & (select_ln544_fu_1146_p3 == 4'd0) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_291 = ((select_ln544_1_fu_1154_p3 == 4'd3) & (select_ln544_fu_1146_p3 == 4'd1) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_295 = ((select_ln544_1_fu_1154_p3 == 4'd3) & (select_ln544_fu_1146_p3 == 4'd0) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_302 = ((select_ln544_1_fu_1154_p3 == 4'd2) & (select_ln544_fu_1146_p3 == 4'd1) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_306 = ((select_ln544_1_fu_1154_p3 == 4'd2) & (select_ln544_fu_1146_p3 == 4'd0) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_313 = ((select_ln544_1_fu_1154_p3 == 4'd1) & (select_ln544_fu_1146_p3 == 4'd6) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_318 = ((select_ln544_1_fu_1154_p3 == 4'd1) & (select_ln544_fu_1146_p3 == 4'd5) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_323 = ((select_ln544_1_fu_1154_p3 == 4'd1) & (select_ln544_fu_1146_p3 == 4'd4) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_328 = ((select_ln544_1_fu_1154_p3 == 4'd1) & (select_ln544_fu_1146_p3 == 4'd3) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_333 = ((select_ln544_1_fu_1154_p3 == 4'd1) & (select_ln544_fu_1146_p3 == 4'd2) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_337 = ((select_ln544_1_fu_1154_p3 == 4'd1) & (select_ln544_fu_1146_p3 == 4'd1) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_341 = ((select_ln544_1_fu_1154_p3 == 4'd1) & (select_ln544_fu_1146_p3 == 4'd0) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_358 = (~(select_ln544_fu_1146_p3 == 4'd2) & ~(select_ln544_fu_1146_p3 == 4'd3) & ~(select_ln544_fu_1146_p3 == 4'd4) & ~(select_ln544_fu_1146_p3 == 4'd5) & ~(select_ln544_fu_1146_p3 == 4'd6) & ~(select_ln544_fu_1146_p3 == 4'd0) & ~(select_ln544_fu_1146_p3 == 4'd1) & (select_ln544_1_fu_1154_p3 == 4'd1) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_364 = ((select_ln544_1_fu_1154_p3 == 4'd0) & (select_ln544_fu_1146_p3 == 4'd6) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_368 = ((select_ln544_1_fu_1154_p3 == 4'd0) & (select_ln544_fu_1146_p3 == 4'd5) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_372 = ((select_ln544_1_fu_1154_p3 == 4'd0) & (select_ln544_fu_1146_p3 == 4'd4) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_376 = ((select_ln544_1_fu_1154_p3 == 4'd0) & (select_ln544_fu_1146_p3 == 4'd3) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_380 = ((select_ln544_1_fu_1154_p3 == 4'd0) & (select_ln544_fu_1146_p3 == 4'd2) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_384 = ((select_ln544_1_fu_1154_p3 == 4'd0) & (select_ln544_fu_1146_p3 == 4'd1) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_388 = ((select_ln544_1_fu_1154_p3 == 4'd0) & (select_ln544_fu_1146_p3 == 4'd0) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_398 = (~(select_ln544_fu_1146_p3 == 4'd2) & ~(select_ln544_fu_1146_p3 == 4'd3) & ~(select_ln544_fu_1146_p3 == 4'd4) & ~(select_ln544_fu_1146_p3 == 4'd5) & ~(select_ln544_fu_1146_p3 == 4'd6) & ~(select_ln544_fu_1146_p3 == 4'd0) & ~(select_ln544_fu_1146_p3 == 4'd1) & (select_ln544_1_fu_1154_p3 == 4'd0) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_416 = (~(select_ln544_1_fu_1154_p3 == 4'd0) & ~(select_ln544_1_fu_1154_p3 == 4'd1) & ~(select_ln544_1_fu_1154_p3 == 4'd2) & ~(select_ln544_1_fu_1154_p3 == 4'd3) & ~(select_ln544_1_fu_1154_p3 == 4'd4) & ~(select_ln544_1_fu_1154_p3 == 4'd5) & ~(select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd1) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_420 = (~(select_ln544_1_fu_1154_p3 == 4'd0) & ~(select_ln544_1_fu_1154_p3 == 4'd1) & ~(select_ln544_1_fu_1154_p3 == 4'd2) & ~(select_ln544_1_fu_1154_p3 == 4'd3) & ~(select_ln544_1_fu_1154_p3 == 4'd4) & ~(select_ln544_1_fu_1154_p3 == 4'd5) & ~(select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd0) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_424 = ((select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd6) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_428 = ((select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd5) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_432 = ((select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd4) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_436 = ((select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd3) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_440 = ((select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd2) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_454 = (~(select_ln544_fu_1146_p3 == 4'd2) & ~(select_ln544_fu_1146_p3 == 4'd3) & ~(select_ln544_fu_1146_p3 == 4'd4) & ~(select_ln544_fu_1146_p3 == 4'd5) & ~(select_ln544_fu_1146_p3 == 4'd6) & ~(select_ln544_fu_1146_p3 == 4'd0) & ~(select_ln544_fu_1146_p3 == 4'd1) & (select_ln544_1_fu_1154_p3 == 4'd6) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_458 = ((select_ln544_1_fu_1154_p3 == 4'd5) & (select_ln544_fu_1146_p3 == 4'd6) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_468 = (~(select_ln544_fu_1146_p3 == 4'd2) & ~(select_ln544_fu_1146_p3 == 4'd3) & ~(select_ln544_fu_1146_p3 == 4'd4) & ~(select_ln544_fu_1146_p3 == 4'd5) & ~(select_ln544_fu_1146_p3 == 4'd6) & ~(select_ln544_fu_1146_p3 == 4'd0) & ~(select_ln544_fu_1146_p3 == 4'd1) & (select_ln544_1_fu_1154_p3 == 4'd5) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_472 = ((select_ln544_1_fu_1154_p3 == 4'd4) & (select_ln544_fu_1146_p3 == 4'd6) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_482 = (~(select_ln544_fu_1146_p3 == 4'd2) & ~(select_ln544_fu_1146_p3 == 4'd3) & ~(select_ln544_fu_1146_p3 == 4'd4) & ~(select_ln544_fu_1146_p3 == 4'd5) & ~(select_ln544_fu_1146_p3 == 4'd6) & ~(select_ln544_fu_1146_p3 == 4'd0) & ~(select_ln544_fu_1146_p3 == 4'd1) & (select_ln544_1_fu_1154_p3 == 4'd4) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_486 = ((select_ln544_1_fu_1154_p3 == 4'd3) & (select_ln544_fu_1146_p3 == 4'd6) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_496 = (~(select_ln544_fu_1146_p3 == 4'd2) & ~(select_ln544_fu_1146_p3 == 4'd3) & ~(select_ln544_fu_1146_p3 == 4'd4) & ~(select_ln544_fu_1146_p3 == 4'd5) & ~(select_ln544_fu_1146_p3 == 4'd6) & ~(select_ln544_fu_1146_p3 == 4'd0) & ~(select_ln544_fu_1146_p3 == 4'd1) & (select_ln544_1_fu_1154_p3 == 4'd3) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_500 = ((select_ln544_1_fu_1154_p3 == 4'd2) & (select_ln544_fu_1146_p3 == 4'd6) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_510 = (~(select_ln544_fu_1146_p3 == 4'd2) & ~(select_ln544_fu_1146_p3 == 4'd3) & ~(select_ln544_fu_1146_p3 == 4'd4) & ~(select_ln544_fu_1146_p3 == 4'd5) & ~(select_ln544_fu_1146_p3 == 4'd6) & ~(select_ln544_fu_1146_p3 == 4'd0) & ~(select_ln544_fu_1146_p3 == 4'd1) & (select_ln544_1_fu_1154_p3 == 4'd2) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_522 = (~(select_ln544_1_fu_1154_p3 == 4'd0) & ~(select_ln544_1_fu_1154_p3 == 4'd1) & ~(select_ln544_1_fu_1154_p3 == 4'd2) & ~(select_ln544_1_fu_1154_p3 == 4'd3) & ~(select_ln544_1_fu_1154_p3 == 4'd4) & ~(select_ln544_1_fu_1154_p3 == 4'd5) & ~(select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd6) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_526 = (~(select_ln544_1_fu_1154_p3 == 4'd0) & ~(select_ln544_1_fu_1154_p3 == 4'd1) & ~(select_ln544_1_fu_1154_p3 == 4'd2) & ~(select_ln544_1_fu_1154_p3 == 4'd3) & ~(select_ln544_1_fu_1154_p3 == 4'd4) & ~(select_ln544_1_fu_1154_p3 == 4'd5) & ~(select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd5) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_530 = (~(select_ln544_1_fu_1154_p3 == 4'd0) & ~(select_ln544_1_fu_1154_p3 == 4'd1) & ~(select_ln544_1_fu_1154_p3 == 4'd2) & ~(select_ln544_1_fu_1154_p3 == 4'd3) & ~(select_ln544_1_fu_1154_p3 == 4'd4) & ~(select_ln544_1_fu_1154_p3 == 4'd5) & ~(select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd4) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_534 = (~(select_ln544_1_fu_1154_p3 == 4'd0) & ~(select_ln544_1_fu_1154_p3 == 4'd1) & ~(select_ln544_1_fu_1154_p3 == 4'd2) & ~(select_ln544_1_fu_1154_p3 == 4'd3) & ~(select_ln544_1_fu_1154_p3 == 4'd4) & ~(select_ln544_1_fu_1154_p3 == 4'd5) & ~(select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd3) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_538 = (~(select_ln544_1_fu_1154_p3 == 4'd0) & ~(select_ln544_1_fu_1154_p3 == 4'd1) & ~(select_ln544_1_fu_1154_p3 == 4'd2) & ~(select_ln544_1_fu_1154_p3 == 4'd3) & ~(select_ln544_1_fu_1154_p3 == 4'd4) & ~(select_ln544_1_fu_1154_p3 == 4'd5) & ~(select_ln544_1_fu_1154_p3 == 4'd6) & (select_ln544_fu_1146_p3 == 4'd2) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_552 = (~(select_ln544_1_fu_1154_p3 == 4'd0) & ~(select_ln544_fu_1146_p3 == 4'd2) & ~(select_ln544_fu_1146_p3 == 4'd3) & ~(select_ln544_fu_1146_p3 == 4'd4) & ~(select_ln544_fu_1146_p3 == 4'd5) & ~(select_ln544_fu_1146_p3 == 4'd6) & ~(select_ln544_1_fu_1154_p3 == 4'd1) & ~(select_ln544_1_fu_1154_p3 == 4'd2) & ~(select_ln544_1_fu_1154_p3 == 4'd3) & ~(select_ln544_1_fu_1154_p3 == 4'd4) & ~(select_ln544_1_fu_1154_p3 == 4'd5) & ~(select_ln544_fu_1146_p3 == 4'd0) & ~(select_ln544_fu_1146_p3 == 4'd1) & ~(select_ln544_1_fu_1154_p3 == 4'd6) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_574 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_613 = ((select_ln544_1_fu_1154_p3 == 4'd2) & (select_ln544_fu_1146_p3 == 4'd3) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_615 = ((select_ln544_1_fu_1154_p3 == 4'd2) & (select_ln544_fu_1146_p3 == 4'd4) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_617 = ((select_ln544_1_fu_1154_p3 == 4'd2) & (select_ln544_fu_1146_p3 == 4'd5) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_622 = ((select_ln544_1_fu_1154_p3 == 4'd3) & (select_ln544_fu_1146_p3 == 4'd3) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_624 = ((select_ln544_1_fu_1154_p3 == 4'd3) & (select_ln544_fu_1146_p3 == 4'd4) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_626 = ((select_ln544_1_fu_1154_p3 == 4'd3) & (select_ln544_fu_1146_p3 == 4'd5) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_631 = ((select_ln544_1_fu_1154_p3 == 4'd4) & (select_ln544_fu_1146_p3 == 4'd3) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_633 = ((select_ln544_1_fu_1154_p3 == 4'd4) & (select_ln544_fu_1146_p3 == 4'd4) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_635 = ((select_ln544_1_fu_1154_p3 == 4'd4) & (select_ln544_fu_1146_p3 == 4'd5) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_640 = ((select_ln544_1_fu_1154_p3 == 4'd5) & (select_ln544_fu_1146_p3 == 4'd3) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_642 = ((select_ln544_1_fu_1154_p3 == 4'd5) & (select_ln544_fu_1146_p3 == 4'd4) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_644 = ((select_ln544_1_fu_1154_p3 == 4'd5) & (select_ln544_fu_1146_p3 == 4'd5) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_662 = ((select_ln544_1_reg_1438 == 4'd2) & (select_ln544_reg_1433 == 4'd2) & (icmp_ln887_reg_1424 == 1'd0));
end

always @ (*) begin
    ap_condition_666 = ((select_ln544_1_reg_1438 == 4'd3) & (select_ln544_reg_1433 == 4'd2) & (icmp_ln887_reg_1424 == 1'd0));
end

always @ (*) begin
    ap_condition_670 = ((select_ln544_1_reg_1438 == 4'd4) & (select_ln544_reg_1433 == 4'd2) & (icmp_ln887_reg_1424 == 1'd0));
end

always @ (*) begin
    ap_condition_674 = ((select_ln544_1_reg_1438 == 4'd5) & (select_ln544_reg_1433 == 4'd2) & (icmp_ln887_reg_1424 == 1'd0));
end

always @ (*) begin
    ap_condition_678 = ((select_ln544_1_reg_1438 == 4'd6) & (select_ln544_reg_1433 == 4'd2) & (icmp_ln887_reg_1424 == 1'd0));
end

always @ (*) begin
    ap_condition_696 = (~(select_ln544_1_reg_1438 == 4'd1) & ~(select_ln544_1_reg_1438 == 4'd0) & ~(select_ln544_1_reg_1438 == 4'd6) & ~(select_ln544_1_reg_1438 == 4'd5) & ~(select_ln544_1_reg_1438 == 4'd4) & ~(select_ln544_1_reg_1438 == 4'd3) & ~(select_ln544_1_reg_1438 == 4'd2) & (select_ln544_reg_1433 == 4'd2) & (icmp_ln887_reg_1424 == 1'd0));
end

always @ (*) begin
    ap_condition_702 = ((select_ln544_1_fu_1154_p3 == 4'd2) & (select_ln544_fu_1146_p3 == 4'd2) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_704 = ((select_ln544_1_fu_1154_p3 == 4'd3) & (select_ln544_fu_1146_p3 == 4'd2) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_706 = ((select_ln544_1_fu_1154_p3 == 4'd4) & (select_ln544_fu_1146_p3 == 4'd2) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_708 = ((select_ln544_1_fu_1154_p3 == 4'd5) & (select_ln544_fu_1146_p3 == 4'd2) & (icmp_ln887_fu_1122_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_714 = ((select_ln544_1_reg_1438 == 4'd0) & (select_ln544_reg_1433 == 4'd0) & (icmp_ln887_reg_1424 == 1'd0));
end

always @ (*) begin
    ap_condition_717 = ((select_ln544_1_reg_1438 == 4'd1) & (select_ln544_reg_1433 == 4'd0) & (icmp_ln887_reg_1424 == 1'd0));
end

always @ (*) begin
    ap_condition_719 = ((select_ln544_1_reg_1438 == 4'd2) & (select_ln544_reg_1433 == 4'd0) & (icmp_ln887_reg_1424 == 1'd0));
end

always @ (*) begin
    ap_condition_721 = ((select_ln544_1_reg_1438 == 4'd3) & (select_ln544_reg_1433 == 4'd0) & (icmp_ln887_reg_1424 == 1'd0));
end

always @ (*) begin
    ap_condition_723 = ((select_ln544_1_reg_1438 == 4'd4) & (select_ln544_reg_1433 == 4'd0) & (icmp_ln887_reg_1424 == 1'd0));
end

always @ (*) begin
    ap_condition_725 = ((select_ln544_1_reg_1438 == 4'd5) & (select_ln544_reg_1433 == 4'd0) & (icmp_ln887_reg_1424 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_phi_ln68_1_reg_989 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln68_reg_856 = 'bx;

assign icmp_ln887_1_fu_1140_p2 = ((p_082_0_reg_845 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_1122_p2 = ((indvar_flatten_reg_823 == 7'd64) ? 1'b1 : 1'b0);

assign select_ln544_1_fu_1154_p3 = ((icmp_ln887_1_fu_1140_p2[0:0] === 1'b1) ? y_V_fu_1134_p2 : ap_phi_mux_p_089_0_phi_fu_838_p4);

assign select_ln544_fu_1146_p3 = ((icmp_ln887_1_fu_1140_p2[0:0] === 1'b1) ? 4'd0 : p_082_0_reg_845);

assign tmp_1_fu_1168_p3 = {{select_ln544_1_reg_1438_pp0_iter1_reg}, {3'd0}};

assign trunc_ln214_1_fu_1197_p1 = ap_phi_reg_pp0_iter2_phi_ln68_1_reg_989[3:0];

assign trunc_ln214_fu_1193_p1 = ap_phi_reg_pp0_iter2_phi_ln68_reg_856[3:0];

assign x_V_fu_1162_p2 = (4'd1 + select_ln544_fu_1146_p3);

assign y_V_fu_1134_p2 = (ap_phi_mux_p_089_0_phi_fu_838_p4 + 4'd1);

assign zext_ln321_1_fu_1188_p1 = add_ln321_fu_1182_p2;

assign zext_ln321_fu_1179_p1 = select_ln544_reg_1433_pp0_iter1_reg;

assign zext_ln8_fu_1175_p1 = tmp_1_fu_1168_p3;

endmodule //default_function
